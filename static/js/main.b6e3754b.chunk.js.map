{"version":3,"sources":["Button.js","TodoItem.js","ThemeSelector.js","App.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","props","$theme","theme","darkcyan","btnFont","salmon","second","$br15","$flex","TodoButton","FilterButtons","div","Todo","fade","$isDone","$filter","TodoContent","span","font","TodoItem","todo","deleteTodo","editTodo","toggleIsDone","listFilter","id","isDone","type","onClick","defaultChecked","className","content","SelectorWrapper","Selector","$color","ThemeSelector","themeChange","Background","rgba","Wrapper","TodoListWrapper","AddTodo","AddTodoInput","input","TodoWrapper","App","useState","todos","setTodos","value","setValue","filter","setFilter","setTheme","handleTodoDelete","handleTodoEdit","console","log","document","getElementsByClassName","handleToggleIsDone","map","handleTodoFilterChange","placeholder","onChange","e","target","preventDefault","trim","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","bg","main","getElementById"],"mappings":"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","file":"static/js/main.b6e3754b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  color: ${(props) =>\r\n    props.$theme === `darkcyan`\r\n      ? props.theme.darkcyan.btnFont\r\n      : props.theme.salmon.btnFont};\r\n  background: ${(props) =>\r\n    props.$theme === `salmon` && props.theme.salmon.second};\r\n  border: 1px solid #767676;\r\n  border-radius: ${(props) => (props.$br15 ? `15px` : `3px`)};\r\n\r\n  & + & {\r\n    margin-left: 5px;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    filter: opacity(80%);\r\n  }\r\n\r\n  ${(props) =>\r\n    props.$flex &&\r\n    `\r\n    flex: 1;\r\n  `}\r\n`;\r\n\r\nconst TodoButton = styled(Button)`\r\n  margin-left: 15px;\r\n  color: ${(props) =>\r\n    props.$theme === `darkcyan`\r\n      ? props.theme.darkcyan.btnFont\r\n      : props.theme.salmon.btnFont};\r\n`;\r\n\r\nconst FilterButtons = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  & h3 {\r\n    width: 15%;\r\n  }\r\n`;\r\n\r\nexport { Button, TodoButton, FilterButtons };\r\n","import styled from \"styled-components\";\r\nimport { TodoButton } from \"./Button.js\";\r\n\r\nconst Todo = styled.div`\r\n  padding: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid\r\n    ${(props) =>\r\n      props.$theme === `darkcyan`\r\n        ? props.theme.darkcyan.fade\r\n        : props.theme.salmon.fade};\r\n\r\n  & + & {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  & .todo-content {\r\n    ${(props) =>\r\n      props.$isDone &&\r\n      `\r\n      text-decoration: line-through;\r\n      color: ${\r\n        props.$theme === `darkcyan`\r\n          ? props.theme.darkcyan.fade\r\n          : props.theme.salmon.fade\r\n      };\r\n    `}\r\n  }\r\n\r\n  ${(props) =>\r\n    props.$filter === `Done` &&\r\n    !props.$isDone &&\r\n    ` \r\n    display: none;\r\n  `}\r\n\r\n  ${(props) =>\r\n    props.$filter === `Todo` &&\r\n    props.$isDone &&\r\n    ` \r\n    display: none;\r\n  `}\r\n`;\r\n\r\nconst TodoContent = styled.span`\r\n  text-align: left;\r\n  color: ${(props) =>\r\n    props.$theme === `darkcyan`\r\n      ? props.theme.darkcyan.font\r\n      : props.theme.salmon.font};\r\n`;\r\n\r\nexport default function TodoItem({\r\n  todo,\r\n  deleteTodo,\r\n  editTodo,\r\n  toggleIsDone,\r\n  listFilter,\r\n  theme,\r\n}) {\r\n  return (\r\n    <Todo\r\n      data-todo-id={todo.id}\r\n      $theme={theme}\r\n      $filter={listFilter}\r\n      $isDone={todo.isDone}\r\n    >\r\n      <div>\r\n        <input\r\n          type=\"checkbox\"\r\n          onClick={() => toggleIsDone(todo.id)}\r\n          defaultChecked={todo.isDone}\r\n        />\r\n        <TodoContent $theme={theme} className=\"todo-content\">\r\n          {todo.content}\r\n        </TodoContent>\r\n      </div>\r\n      <div>\r\n        <TodoButton $theme={theme} onClick={editTodo}>\r\n          編輯\r\n        </TodoButton>\r\n        <TodoButton $theme={theme} onClick={() => deleteTodo(todo.id)}>\r\n          刪除\r\n        </TodoButton>\r\n      </div>\r\n    </Todo>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Button } from \"./Button.js\";\r\n\r\nconst SelectorWrapper = styled.div`\r\n  padding-bottom: 10px;\r\n  text-align: right;\r\n`;\r\n\r\nconst Selector = styled(Button)`\r\n  background: ${(props) => props.$color};\r\n  width: 25px;\r\n  height: 25px;\r\n  border: 2px solid\r\n    ${(props) => (props.$theme === props.$color ? \"black\" : \"gray\")};\r\n  border-radius: 50%;\r\n\r\n  &:active {\r\n    border: 2px inset black;\r\n  }\r\n`;\r\n\r\nexport default function ThemeSelector({ theme, themeChange }) {\r\n  return (\r\n    <SelectorWrapper>\r\n      <Selector\r\n        $color=\"salmon\"\r\n        $theme={theme}\r\n        onClick={() => themeChange(\"salmon\")}\r\n      ></Selector>\r\n      <Selector\r\n        $color=\"darkcyan\"\r\n        $theme={theme}\r\n        onClick={() => themeChange(\"darkcyan\")}\r\n      ></Selector>\r\n    </SelectorWrapper>\r\n  );\r\n}\r\n\r\n// 待辦\r\n// 加入 active 標籤，selector 顯示粗線\r\n","import styled from \"styled-components\";\nimport TodoItem from \"./TodoItem.js\";\nimport ThemeSelector from \"./ThemeSelector.js\";\nimport { useState } from \"react\";\nimport { Button, FilterButtons } from \"./Button.js\";\n\nconst Background = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1;\n  color: ${(props) =>\n    props.$theme === `darkcyan`\n      ? props.theme.darkcyan.font\n      : props.theme.salmon.font};\n  background: ${(props) =>\n    props.$theme === `darkcyan`\n      ? props.theme.darkcyan.rgba\n      : props.theme.salmon.rgba};\n  background-image: linear-gradient(\n      0deg,\n      rgba(255, 255, 255, 0.3) 1px,\n      transparent 0\n    ),\n    linear-gradient(90deg, rgba(255, 255, 255, 0.3) 1px, transparent 0);\n  background-size: 15px 15px, 15px 15px;\n`;\n\nconst Wrapper = styled.div`\n  margin: 50px auto 0;\n  max-width: 500px;\n`;\n\nconst TodoListWrapper = styled.div`\n  padding: 30px;\n  background: #ffffff;\n  border-radius: 3px;\n  box-sizing: border-box;\n`;\n\nconst AddTodo = styled.div`\n  margin: 30px 0 20px;\n  display: flex;\n  text-align: left;\n`;\n\nconst AddTodoInput = styled.input`\n  margin-right: 5px;\n  width: 80%;\n\n  &::placeholder {\n    color: ${(props) =>\n      props.$theme === `darkcyan`\n        ? props.theme.darkcyan.fade\n        : props.theme.salmon.fade};\n  }\n`;\n\nconst TodoWrapper = styled.div`\n  margin-bottom: 20px;\n  min-height: 250px;\n`;\n\nlet id = 4;\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    { id: 1, content: \"abc\", isDone: true },\n    { id: 2, content: \"def\", isDone: true },\n    { id: 3, content: \"ghi\", isDone: false },\n  ]);\n  const [value, setValue] = useState(\"\");\n  const [filter, setFilter] = useState(\"All\");\n  const [theme, setTheme] = useState(\"darkcyan\");\n\n  const handleThemeChange = (theme) => {\n    setTheme(theme);\n  };\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleAddButtonClick = (e) => {\n    e.preventDefault();\n\n    if (!value.trim()) {\n      alert(\"Where's your todo??????\");\n      return setValue(\"\");\n    }\n    setTodos([\n      {\n        id,\n        content: value,\n        isDone: false,\n      },\n      ...todos,\n    ]);\n    setValue(\"\");\n    id++;\n  };\n\n  const handleTodoDelete = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleTodoEdit = () => {\n    console.log(document.getElementsByClassName(\"todo-content\"));\n  };\n\n  const handleToggleIsDone = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n        };\n      })\n    );\n  };\n\n  const handleTodoFilterChange = (filter) => {\n    setFilter(filter);\n  };\n\n  const handleTodoClear = (e) => {\n    e.preventDefault();\n    alert(\"This will clear all of the todos, are you sure?\");\n    setTodos([]);\n    setFilter(\"All\");\n  };\n\n  return (\n    <Background $theme={theme}>\n      <Wrapper>\n        <ThemeSelector theme={theme} themeChange={handleThemeChange} />\n        <TodoListWrapper>\n          <h1>Todo List</h1>\n          <AddTodo>\n            <AddTodoInput\n              $theme={theme}\n              className=\"add-input-todo\"\n              type=\"text\"\n              value={value}\n              placeholder=\"Add here\"\n              onChange={handleInputChange}\n            />\n            <Button $theme={theme} $br15 $flex onClick={handleAddButtonClick}>\n              Add!\n            </Button>\n          </AddTodo>\n          <TodoWrapper>\n            {todos.map((todo) => (\n              <TodoItem\n                key={todo.id}\n                todo={todo}\n                deleteTodo={handleTodoDelete}\n                editTodo={handleTodoEdit}\n                toggleIsDone={handleToggleIsDone}\n                listFilter={filter}\n                theme={theme}\n              />\n            ))}\n          </TodoWrapper>\n          <FilterButtons>\n            <h3>{filter}</h3>\n            <div>\n              <Button\n                $theme={theme}\n                $br15\n                onClick={() => handleTodoFilterChange(\"All\")}\n              >\n                &nbsp;&nbsp;All&nbsp;&nbsp;\n              </Button>\n              <Button\n                $theme={theme}\n                $br15\n                onClick={() => handleTodoFilterChange(\"Done\")}\n              >\n                Done\n              </Button>\n              <Button\n                $theme={theme}\n                $br15\n                onClick={() => handleTodoFilterChange(\"Todo\")}\n              >\n                Todo\n              </Button>\n            </div>\n            <Button $theme={theme} $br15 onClick={handleTodoClear}>\n              Clear all\n            </Button>\n          </FilterButtons>\n        </TodoListWrapper>\n      </Wrapper>\n    </Background>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst themeColor = {\n  darkcyan: {\n    rgba: \"rgba(50, 70, 100, 0.3)\",\n    bg: \"#c1c7d0\",\n    font: \"#496660\",\n    btnFont: \"darkcyan\",\n    fade: \"#c1c7d0\",\n    main: \"darkcyan\",\n  },\n  salmon: {\n    rgba: \"rgb(231 178 157 / 32%)\",\n    bg: \"#f7e6df\",\n    font: \"salmon\",\n    btnFont: \"tomato\",\n    fade: \"#eddbd4\",\n    main: \"salmon\",\n    second: \"mistyrose\",\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={themeColor}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}