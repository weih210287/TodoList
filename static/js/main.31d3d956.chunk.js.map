{"version":3,"sources":["Constants/GlobalStyle.js","Button.js","ThemeSelector.js","TodoItem.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","props","theme","main","font","rgba","Button","styled","button","btnFont","$theme","second","$br15","$flex","TodoButton","FilterButtons","div","SelectorWrapper","Selector","$color","ThemeSelector","themeChange","onClick","Todo","fade","$isDone","$filter","TodoContent","span","TodoItem","todo","deleteTodo","toggleIsDone","editTodo","listFilter","id","isDone","type","defaultChecked","className","content","Wrapper","TodoListWrapper","AddTodo","AddTodoInput","input","TodoWrapper","App","useState","todos","setTodos","value","setValue","filter","setFilter","setTheme","themeColor","bg","handleTodoDelete","handleTodoEdit","console","log","document","getElementsByClassName","handleToggleIsDone","map","handleTodoFilterChange","placeholder","onChange","e","target","preventDefault","trim","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"0NAgBeA,EAdKC,YAAH,yUAEJ,SAACC,GAAD,OAAWA,EAAMC,MAAMC,KAAKC,QACvB,SAACH,GAAD,OAAWA,EAAMC,MAAMC,KAAKE,QCHxCC,EAASC,IAAOC,OAAV,2OACD,SAACP,GAAD,OAAWA,EAAMC,MAAMC,KAAKM,WACvB,SAACR,GAAD,MACZ,WAAAA,EAAMS,QAAuBT,EAAMC,MAAMC,KAAKQ,UAE/B,SAACV,GAAD,OAAYA,EAAMW,MAAN,gBAW3B,SAACX,GAAD,OACAA,EAAMY,OAAN,wBAMEC,EAAaP,YAAOD,EAAPC,CAAH,iEAEL,SAACN,GAAD,OAAWA,EAAMC,MAAMC,KAAKM,WAGjCM,EAAgBR,IAAOS,IAAV,mH,OC3BbC,EAAkBV,IAAOS,IAAV,2EAKfE,EAAWX,YAAOD,EAAPC,CAAH,0LACE,SAACN,GAAD,OAAWA,EAAMkB,UAI3B,SAAClB,GAAD,OAAYA,EAAMS,SAAWT,EAAMkB,OAAS,QAAU,UAQ7C,SAASC,EAAT,GAAgD,IAAvBlB,EAAsB,EAAtBA,MAAOmB,EAAe,EAAfA,YAC7C,OACE,eAACJ,EAAD,WACE,cAACC,EAAD,CACEC,OAAO,SACPT,OAAQR,EACRoB,QAAS,kBAAMD,EAAY,aAE7B,cAACH,EAAD,CACEC,OAAO,WACPT,OAAQR,EACRoB,QAAS,kBAAMD,EAAY,kBC7BnC,I,UAAME,EAAOhB,IAAOS,IAAV,mOAImB,SAACf,GAAD,OAAWA,EAAMC,MAAMC,KAAKqB,QAOnD,SAACvB,GAAD,OACAA,EAAMwB,SAAN,+DAGSxB,EAAMC,MAAMC,KAAKqB,KAH1B,cAOF,SAACvB,GAAD,MACA,SAAAA,EAAMyB,UACLzB,EAAMwB,SADP,+BAMA,SAACxB,GAAD,MACA,SAAAA,EAAMyB,SACNzB,EAAMwB,SADN,+BAOEE,EAAcpB,IAAOqB,KAAV,gEAEN,SAAC3B,GAAD,OAAWA,EAAMC,MAAMC,KAAKC,QAGxB,SAASyB,EAAT,GAOX,IANFC,EAMC,EANDA,KACAC,EAKC,EALDA,WAEAC,GAGC,EAJDC,SAIC,EAHDD,cACAE,EAEC,EAFDA,WACAhC,EACC,EADDA,MAEA,OACE,eAACqB,EAAD,CACE,eAAcO,EAAKK,GACnBzB,OAAQR,EACRwB,QAASQ,EACTT,QAASK,EAAKM,OAJhB,UAME,gCACE,uBACEC,KAAK,WACLf,QAAS,kBAAMU,EAAaF,EAAKK,KACjCG,eAAgBR,EAAKM,SAEvB,cAACT,EAAD,CAAajB,OAAQR,EAAOqC,UAAU,eAAtC,SACGT,EAAKU,aAGV,8BACE,cAAC1B,EAAD,CAAYJ,OAAQR,EAAOoB,QAAS,kBAAMS,EAAWD,EAAKK,KAA1D,+BC5DR,IAAMM,EAAUlC,IAAOS,IAAV,yEAKP0B,EAAkBnC,IAAOS,IAAV,wHAOf2B,EAAUpC,IAAOS,IAAV,2FAMP4B,EAAerC,IAAOsC,MAAV,6GAKL,SAAC5C,GAAD,OAAWA,EAAMC,MAAMC,KAAKqB,QAInCsB,EAAcvC,IAAOS,IAAV,0EAKbmB,EAAK,EAkKMY,MAhKf,WACE,MAA0BC,mBAAS,CACjC,CAAEb,GAAI,EAAGK,QAAS,MAAOJ,QAAQ,GACjC,CAAED,GAAI,EAAGK,QAAS,MAAOJ,QAAQ,GACjC,CAAED,GAAI,EAAGK,QAAS,MAAOJ,QAAQ,KAHnC,mBAAOa,EAAP,KAAcC,EAAd,KAKA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,mBAAS,OAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA0BN,mBAAS,YAAnC,mBAAO9C,EAAP,KAAcqD,EAAd,KAEMC,EACM,aAAVtD,EACI,CACEC,KAAM,CACJE,KAAM,yBACNoD,GAAI,UACJrD,KAAM,UACNK,QAAS,WACTe,KAAM,UACNrB,KAAM,aAGV,CACEA,KAAM,CACJE,KAAM,yBACNoD,GAAI,UACJrD,KAAM,SACNK,QAAS,SACTe,KAAM,UACNrB,KAAM,SACNQ,OAAQ,cA+BZ+C,EAAmB,SAACvB,GACxBe,EAASD,EAAMI,QAAO,SAACvB,GAAD,OAAUA,EAAKK,KAAOA,OAGxCwB,EAAiB,WACrBC,QAAQC,IAAIC,SAASC,uBAAuB,kBAGxCC,EAAqB,SAAC7B,GAC1Be,EACED,EAAMgB,KAAI,SAACnC,GACT,OAAIA,EAAKK,KAAOA,EAAWL,EACpB,2BACFA,GADL,IAEEM,QAASN,EAAKM,cAMhB8B,EAAyB,SAACb,GAC9BC,EAAUD,IAUZ,OACE,eAAC,IAAD,CAAenD,MAAOsD,EAAtB,UACE,cAAC,EAAD,IACA,eAACf,EAAD,WACE,cAACrB,EAAD,CAAelB,MAAOA,EAAOmB,YA9DT,SAACnB,GACzBqD,EAASrD,MA8DL,eAACwC,EAAD,WACE,2CACA,eAACC,EAAD,WACE,cAACC,EAAD,CACElC,OAAQR,EACRqC,UAAU,iBACVF,KAAK,OACLc,MAAOA,EACPgB,YAAY,WACZC,SApEc,SAACC,GACzBjB,EAASiB,EAAEC,OAAOnB,UAqEV,cAAC7C,EAAD,CAAQI,OAAQR,EAAOU,OAAK,EAACC,OAAK,EAACS,QAlEhB,SAAC+C,GAG5B,GAFAA,EAAEE,kBAEGpB,EAAMqB,OAET,OADAC,MAAM,2BACCrB,EAAS,IAElBF,EAAS,CACP,CACEf,KACAK,QAASW,EACTf,QAAQ,IAJJ,mBAMHa,KAELG,EAAS,IACTjB,KAkDQ,qBAIF,cAACW,EAAD,UACGG,EAAMgB,KAAI,SAACnC,GAAD,OACT,cAACD,EAAD,CAEEC,KAAMA,EACNC,WAAY2B,EACZzB,SAAU0B,EACV3B,aAAcgC,EACd9B,WAAYmB,EACZnD,MAAOA,GANF4B,EAAKK,SAUhB,eAACpB,EAAD,WACE,6BAAKsC,IACL,gCACE,cAAC/C,EAAD,CACEI,OAAQR,EACRU,OAAK,EACLU,QAAS,kBAAM4C,EAAuB,QAHxC,iCAOA,cAAC5D,EAAD,CACEI,OAAQR,EACRU,OAAK,EACLU,QAAS,kBAAM4C,EAAuB,SAHxC,kBAOA,cAAC5D,EAAD,CACEI,OAAQR,EACRU,OAAK,EACLU,QAAS,kBAAM4C,EAAuB,SAHxC,qBAQF,cAAC5D,EAAD,CAAQI,OAAQR,EAAOU,OAAK,EAACU,QAjEf,SAAC+C,GACvBA,EAAEE,iBACFE,MAAM,mDACNvB,EAAS,IACTI,EAAU,QA6DF,oCCpLGoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAAStB,SAASuB,eAAe,SAKjDX,M","file":"static/js/main.31d3d956.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    color: ${(props) => props.theme.main.font};\r\n    background: ${(props) => props.theme.main.rgba};\r\n    background-image: linear-gradient(\r\n        0deg,\r\n        rgba(255, 255, 255, 0.3) 1px,\r\n        transparent 0\r\n      ),\r\n      linear-gradient(90deg, rgba(255, 255, 255, 0.3) 1px, transparent 0);\r\n    background-size: 15px 15px, 15px 15px;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  color: ${(props) => props.theme.main.btnFont};\r\n  background: ${(props) =>\r\n    props.$theme === `salmon` && props.theme.main.second};\r\n  border: 1px solid #767676;\r\n  border-radius: ${(props) => (props.$br15 ? `15px` : `3px`)};\r\n\r\n  & + & {\r\n    margin-left: 5px;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    filter: opacity(80%);\r\n  }\r\n\r\n  ${(props) =>\r\n    props.$flex &&\r\n    `\r\n    flex: 1;\r\n  `}\r\n`;\r\n\r\nconst TodoButton = styled(Button)`\r\n  margin-left: 15px;\r\n  color: ${(props) => props.theme.main.btnFont};\r\n`;\r\n\r\nconst FilterButtons = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  & h3 {\r\n    width: 15%;\r\n  }\r\n`;\r\n\r\nexport { Button, TodoButton, FilterButtons };\r\n","import styled from \"styled-components\";\r\nimport { Button } from \"./Button.js\";\r\n\r\nconst SelectorWrapper = styled.div`\r\n  padding-bottom: 10px;\r\n  text-align: right;\r\n`;\r\n\r\nconst Selector = styled(Button)`\r\n  background: ${(props) => props.$color};\r\n  width: 25px;\r\n  height: 25px;\r\n  border: 2px solid\r\n    ${(props) => (props.$theme === props.$color ? \"black\" : \"gray\")};\r\n  border-radius: 50%;\r\n\r\n  &:active {\r\n    border: 2px inset black;\r\n  }\r\n`;\r\n\r\nexport default function ThemeSelector({ theme, themeChange }) {\r\n  return (\r\n    <SelectorWrapper>\r\n      <Selector\r\n        $color=\"salmon\"\r\n        $theme={theme}\r\n        onClick={() => themeChange(\"salmon\")}\r\n      ></Selector>\r\n      <Selector\r\n        $color=\"darkcyan\"\r\n        $theme={theme}\r\n        onClick={() => themeChange(\"darkcyan\")}\r\n      ></Selector>\r\n    </SelectorWrapper>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { TodoButton } from \"./Button.js\";\r\n\r\nconst Todo = styled.div`\r\n  padding: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid ${(props) => props.theme.main.fade};\r\n\r\n  & + & {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  & .todo-content {\r\n    ${(props) =>\r\n      props.$isDone &&\r\n      `\r\n      text-decoration: line-through;\r\n      color: ${props.theme.main.fade};\r\n    `}\r\n  }\r\n\r\n  ${(props) =>\r\n    props.$filter === `Done` &&\r\n    !props.$isDone &&\r\n    ` \r\n    display: none;\r\n  `}\r\n\r\n  ${(props) =>\r\n    props.$filter === `Todo` &&\r\n    props.$isDone &&\r\n    ` \r\n    display: none;\r\n  `}\r\n`;\r\n\r\nconst TodoContent = styled.span`\r\n  text-align: left;\r\n  color: ${(props) => props.theme.main.font};\r\n`;\r\n\r\nexport default function TodoItem({\r\n  todo,\r\n  deleteTodo,\r\n  editTodo,\r\n  toggleIsDone,\r\n  listFilter,\r\n  theme,\r\n}) {\r\n  return (\r\n    <Todo\r\n      data-todo-id={todo.id}\r\n      $theme={theme}\r\n      $filter={listFilter}\r\n      $isDone={todo.isDone}\r\n    >\r\n      <div>\r\n        <input\r\n          type=\"checkbox\"\r\n          onClick={() => toggleIsDone(todo.id)}\r\n          defaultChecked={todo.isDone}\r\n        />\r\n        <TodoContent $theme={theme} className=\"todo-content\">\r\n          {todo.content}\r\n        </TodoContent>\r\n      </div>\r\n      <div>\r\n        <TodoButton $theme={theme} onClick={() => deleteTodo(todo.id)}>\r\n          刪除\r\n        </TodoButton>\r\n      </div>\r\n    </Todo>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GlobalStyle from \"./Constants/GlobalStyle.js\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport ThemeSelector from \"./ThemeSelector.js\";\r\nimport TodoItem from \"./TodoItem.js\";\r\nimport { Button, FilterButtons } from \"./Button.js\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 50px auto 0;\r\n  max-width: 500px;\r\n`;\r\n\r\nconst TodoListWrapper = styled.div`\r\n  padding: 30px;\r\n  background: #ffffff;\r\n  border-radius: 3px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst AddTodo = styled.div`\r\n  margin: 30px 0 20px;\r\n  display: flex;\r\n  text-align: left;\r\n`;\r\n\r\nconst AddTodoInput = styled.input`\r\n  margin-right: 5px;\r\n  width: 80%;\r\n\r\n  &::placeholder {\r\n    color: ${(props) => props.theme.main.fade};\r\n  }\r\n`;\r\n\r\nconst TodoWrapper = styled.div`\r\n  margin-bottom: 20px;\r\n  min-height: 250px;\r\n`;\r\n\r\nlet id = 4;\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([\r\n    { id: 1, content: \"abc\", isDone: true },\r\n    { id: 2, content: \"def\", isDone: true },\r\n    { id: 3, content: \"ghi\", isDone: false },\r\n  ]);\r\n  const [value, setValue] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"All\");\r\n  const [theme, setTheme] = useState(\"darkcyan\");\r\n\r\n  const themeColor =\r\n    theme === \"darkcyan\"\r\n      ? {\r\n          main: {\r\n            rgba: \"rgba(50, 70, 100, 0.3)\",\r\n            bg: \"#c1c7d0\",\r\n            font: \"#496660\",\r\n            btnFont: \"darkcyan\",\r\n            fade: \"#c1c7d0\",\r\n            main: \"darkcyan\",\r\n          },\r\n        }\r\n      : {\r\n          main: {\r\n            rgba: \"rgb(231 178 157 / 32%)\",\r\n            bg: \"#f7e6df\",\r\n            font: \"salmon\",\r\n            btnFont: \"tomato\",\r\n            fade: \"#eddbd4\",\r\n            main: \"salmon\",\r\n            second: \"mistyrose\",\r\n          },\r\n        };\r\n\r\n  const handleThemeChange = (theme) => {\r\n    setTheme(theme);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleAddButtonClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!value.trim()) {\r\n      alert(\"Where's your todo??????\");\r\n      return setValue(\"\");\r\n    }\r\n    setTodos([\r\n      {\r\n        id,\r\n        content: value,\r\n        isDone: false,\r\n      },\r\n      ...todos,\r\n    ]);\r\n    setValue(\"\");\r\n    id++;\r\n  };\r\n\r\n  const handleTodoDelete = (id) => {\r\n    setTodos(todos.filter((todo) => todo.id !== id));\r\n  };\r\n\r\n  const handleTodoEdit = () => {\r\n    console.log(document.getElementsByClassName(\"todo-content\"));\r\n  };\r\n\r\n  const handleToggleIsDone = (id) => {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id !== id) return todo;\r\n        return {\r\n          ...todo,\r\n          isDone: !todo.isDone,\r\n        };\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleTodoFilterChange = (filter) => {\r\n    setFilter(filter);\r\n  };\r\n\r\n  const handleTodoClear = (e) => {\r\n    e.preventDefault();\r\n    alert(\"This will clear all of the todos, are you sure?\");\r\n    setTodos([]);\r\n    setFilter(\"All\");\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={themeColor}>\r\n      <GlobalStyle />\r\n      <Wrapper>\r\n        <ThemeSelector theme={theme} themeChange={handleThemeChange} />\r\n        <TodoListWrapper>\r\n          <h1>Todo List</h1>\r\n          <AddTodo>\r\n            <AddTodoInput\r\n              $theme={theme}\r\n              className=\"add-input-todo\"\r\n              type=\"text\"\r\n              value={value}\r\n              placeholder=\"Add here\"\r\n              onChange={handleInputChange}\r\n            />\r\n            <Button $theme={theme} $br15 $flex onClick={handleAddButtonClick}>\r\n              Add!\r\n            </Button>\r\n          </AddTodo>\r\n          <TodoWrapper>\r\n            {todos.map((todo) => (\r\n              <TodoItem\r\n                key={todo.id}\r\n                todo={todo}\r\n                deleteTodo={handleTodoDelete}\r\n                editTodo={handleTodoEdit}\r\n                toggleIsDone={handleToggleIsDone}\r\n                listFilter={filter}\r\n                theme={theme}\r\n              />\r\n            ))}\r\n          </TodoWrapper>\r\n          <FilterButtons>\r\n            <h3>{filter}</h3>\r\n            <div>\r\n              <Button\r\n                $theme={theme}\r\n                $br15\r\n                onClick={() => handleTodoFilterChange(\"All\")}\r\n              >\r\n                &nbsp;&nbsp;All&nbsp;&nbsp;\r\n              </Button>\r\n              <Button\r\n                $theme={theme}\r\n                $br15\r\n                onClick={() => handleTodoFilterChange(\"Done\")}\r\n              >\r\n                Done\r\n              </Button>\r\n              <Button\r\n                $theme={theme}\r\n                $br15\r\n                onClick={() => handleTodoFilterChange(\"Todo\")}\r\n              >\r\n                Todo\r\n              </Button>\r\n            </div>\r\n            <Button $theme={theme} $br15 onClick={handleTodoClear}>\r\n              Clear all\r\n            </Button>\r\n          </FilterButtons>\r\n        </TodoListWrapper>\r\n      </Wrapper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}